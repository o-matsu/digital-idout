rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      // ユーザー情報の取得のルール
      allow get: if true;
      // ユーザー情報の作成のルール
      allow create: if isUserAuthenticated(userId)
        && isValidUser(request.resource.data)
        && request.resource.data.userId == userId
        && request.resource.data.createdAt == request.time
        && isRoles(request.resource.data.role);
    }

    match /metas/{metaId} {
      allow read: if true;
      allow create: if isAuthenticated()
        && isValidMeta(request.resource.data)
        && request.resource.data.authorId == request.auth.uid
        && isRoles(request.resource.data.targetRole);
      allow delete: if isAuthenticated();
    }

    match /regions/{regionId} {
      allow read: if true;
      allow create: if isAuthenticated()
        && isValidRegion(request.resource.data);
      allow update: if isAuthenticated()
        && 'hasRoles' in request.resource.data;
    }

    // // // // // // // // // // //
    function isAuthenticated() {
      return request.auth != null;
    }

    function isUserAuthenticated(userId) {
      return isAuthenticated() && userId == request.auth.uid;
    }

    // ユーザーデータのスキーマ検証
    function isValidUser(user) {
      return user.size() == 5
        && 'createdAt' in user && user.createdAt is timestamp
        && 'email' in user && user.email is string
        && 'userId' in user && user.userId is string
        && 'displayName' in user && user.displayName is string
        && 'role' in user && user.role is string;
    }
    function isRoles(role) {
      return role == 'GENERAL'
        || role == 'EXPERT'
        || role == 'PROJECT';
    }

    // メタデータのスキーマ検証
    function isValidMeta(meta) {
      return meta.size() == 7
        && 'authorId' in meta && meta.authorId is string
        && 'title' in meta && meta.title is string
        && 'targetRole' in meta && meta.targetRole is string
        && 'comment' in meta && meta.comment is string
        && 'createdAt' in meta && meta.createdAt is timestamp
        && 'files' in meta && meta.files is list;
    }

    // 領域データのスキーマ検証
    function isValidRegion(region) {
      return region.size() == 2
        && 'hasRoles' in region && region.hasRoles is map
        && 'points' in region && region.points is list;
    }


    // match /{document=**} {
    //   allow read, write: if
    //       request.time < timestamp.date(2032, 3, 12);
    // }
  }
}
